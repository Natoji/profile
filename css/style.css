/* css/style.css */

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

/* Định nghĩa các biến CSS cho chế độ Sáng (Light Mode - mặc định) */
:root {
    --primary-color: #2563eb;
    --secondary-color: #1e40af;
    --accent-color: #f59e0b;
    --text-dark: #1f2937;
    --text-light: #6b7280;
    --bg-light: #f8fafc;
    --white: #ffffff;
    --shadow: 0 10px 25px rgba(0,0,0,0.1);

    /* Các màu nền và chữ chính */
    --body-bg: var(--white); /* Nền toàn bộ trang */
    --section-bg: var(--bg-light); /* Nền các section chẵn */
    --card-bg: var(--white); /* Nền card (skills, services, portfolio) */
    --header-bg: rgba(255, 255, 255, 0.95); /* Nền header */
    --text-color: var(--text-dark); /* Màu chữ chính */
    --text-secondary-color: var(--text-light); /* Màu chữ phụ */
    --border-color: #e5e7eb; /* Màu đường viền input */
    --scroll-shadow: var(--shadow); /* Shadow cho header khi cuộn */
}

/* Định nghĩa các biến CSS cho chế độ Tối (Dark Mode) */
/* Các biến này sẽ được áp dụng khi body có class 'dark-mode' */
body.dark-mode {
    --primary-color: #667eea; /* Màu xanh sáng hơn cho dark mode */
    --secondary-color: #764ba2; /* Màu tím sáng hơn cho dark mode */
    --accent-color: #f59e0b; /* Giữ nguyên hoặc điều chỉnh nếu cần */
    --text-dark: #e2e8f0; /* Màu chữ sáng cho nền tối */
    --text-light: #a0aec0; /* Màu chữ phụ sáng hơn */

    --body-bg: #1a202c; /* Nền tối toàn bộ trang */
    --section-bg: #2d3748; /* Nền các section chẵn tối hơn */
    --card-bg: #2a3341; /* Nền card tối hơn */
    --header-bg: rgba(26, 32, 44, 0.95); /* Nền header tối */
    --text-color: var(--text-dark);
    --text-secondary-color: var(--text-light);
    --border-color: #4a5568; /* Màu đường viền input tối */
    --shadow: 0 10px 25px rgba(0,0,0,0.5); /* Shadow tối hơn */
    --scroll-shadow: 0 10px 25px rgba(0,0,0,0.7); /* Shadow cho header khi cuộn */
}


/* Cập nhật các quy tắc CSS để sử dụng biến */

body {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    line-height: 1.6;
    color: var(--text-color); /* Sử dụng biến */
    scroll-behavior: smooth;
    background-color: var(--body-bg); /* Sử dụng biến */
    transition: background-color 0.3s ease, color 0.3s ease; /* Thêm transition */
}

/* Header & Navigation */
header {
    position: fixed;
    top: 0;
    width: 100%;
    background: var(--header-bg); /* Sử dụng biến */
    backdrop-filter: blur(10px);
    z-index: 1000;
    padding: 1rem 0;
    box-shadow: var(--scroll-shadow); /* Sử dụng biến */
    transition: background 0.3s ease, box-shadow 0.3s ease; /* Thêm transition */
}

nav {
    max-width: 1200px;
    margin: 0 auto;
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0 2rem;
}

.logo {
    font-size: 1.5rem;
    font-weight: bold;
    color: var(--primary-color);
}

.nav-links {
    display: flex;
    list-style: none;
    gap: 2rem;
}

.nav-links a {
    text-decoration: none;
    color: var(--text-color); /* Sử dụng biến */
    font-weight: 500;
    transition: color 0.3s ease;
}

.nav-links a:hover {
    color: var(--primary-color);
}

.menu-toggle {
    display: none;
    flex-direction: column;
    cursor: pointer;
}

.menu-toggle span {
    width: 25px;
    height: 3px;
    background: var(--text-color); /* Sử dụng biến */
    margin: 3px 0;
    transition: 0.3s;
}

/* Hero Section */
.hero {
    /* Giữ nguyên gradient cho hero, vì nó thường không đổi giữa light/dark */
    /* Nếu bạn muốn thay đổi gradient, hãy định nghĩa biến cho màu gradient */
    min-height: 100vh;
    display: flex;
    align-items: center;
    background: linear-gradient(135deg, var(--primary-color) 0%, var(--secondary-color) 100%);
    color: var(--white); /* Màu chữ trắng vẫn tốt trên nền gradient */
    position: relative;
    overflow: hidden;
}

.hero::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grain" width="100" height="100" patternUnits="userSpaceOnUse"><circle cx="25" cy="25" r="1" fill="white" opacity="0.1"/><circle cx="75" cy="75" r="1" fill="white" opacity="0.1"/><circle cx="50" cy="10" r="1" fill="white" opacity="0.1"/><circle cx="10" cy="90" r="1" fill="white" opacity="0.1"/></pattern></defs><rect width="100%" height="100%" fill="url(%23grain)"/></svg>');
}

.hero-content {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 2rem;
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 4rem;
    align-items: center;
    position: relative;
    z-index: 1;
}

.hero-text h1 {
    font-size: 3.5rem;
    font-weight: 700;
    margin-bottom: 1rem;
    animation: fadeInUp 1s ease;
}

.hero-text .subtitle {
    font-size: 1.5rem;
    margin-bottom: 1.5rem;
    color: rgba(255, 255, 255, 0.9);
    animation: fadeInUp 1s ease 0.2s both;
}

.hero-text p {
    font-size: 1.1rem;
    margin-bottom: 2rem;
    color: rgba(255, 255, 255, 0.8);
    animation: fadeInUp 1s ease 0.4s both;
}

.cta-buttons {
    display: flex;
    gap: 1rem;
    animation: fadeInUp 1s ease 0.6s both;
}

.btn {
    padding: 1rem 2rem;
    border: none;
    border-radius: 50px;
    font-size: 1rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
    text-decoration: none;
    display: inline-block;
}

.btn-primary {
    background: var(--accent-color);
    color: var(--white);
}

.btn-primary:hover {
    background: #d97706;
    transform: translateY(-2px);
    box-shadow: 0 10px 20px rgba(0,0,0,0.2);
}

.btn-secondary {
    background: transparent;
    color: var(--white);
    border: 2px solid var(--white);
}

.btn-secondary:hover {
    background: var(--white);
    color: var(--primary-color);
}

.hero-image {
    display: flex;
    justify-content: center;
    animation: fadeInRight 1s ease 0.8s both;
}

.profile-image-container { /* Đổi tên class để tránh nhầm lẫn với img */
    width: 300px;
    height: 300px;
    border-radius: 50%;
    border: 5px solid rgba(255, 255, 255, 0.3);
    object-fit: cover;
    box-shadow: var(--shadow);
    /* Các thuộc tính về gradient, display, align-items, justify-content đã chuyển vào inline style trong HTML */
}

.profile-image { /* Dành cho thẻ img */
    width: 100%;
    height: 100%;
    border-radius: 50%;
    object-fit: cover;
}


/* Section Styles */
section {
    padding: 5rem 0;
    background-color: var(--body-bg); /* Mặc định là body-bg */
    transition: background-color 0.3s ease; /* Thêm transition */
}

.container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 2rem;
}

.section-title {
    text-align: center;
    margin-bottom: 3rem;
}

.section-title h2 {
    font-size: 2.5rem;
    font-weight: 700;
    color: var(--text-color); /* Sử dụng biến */
    margin-bottom: 1rem;
}

.section-title p {
    font-size: 1.1rem;
    color: var(--text-secondary-color); /* Sử dụng biến */
}

/* About Section */
.about {
    background: var(--section-bg); /* Sử dụng biến */
}

.about-content {
    display: grid;
    grid-template-columns: 1fr 2fr;
    gap: 4rem;
    align-items: center;
}

.about-text h3 {
    font-size: 1.5rem;
    margin-bottom: 1rem;
    color: var(--primary-color);
}

.about-text p {
    margin-bottom: 1.5rem;
    color: var(--text-secondary-color); /* Sử dụng biến */
}

.skills-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 1.5rem;
    margin-top: 2rem;
}

.skill-item {
    background: var(--card-bg); /* Sử dụng biến */
    padding: 1.5rem;
    border-radius: 10px;
    box-shadow: var(--shadow); /* Sử dụng biến */
    text-align: center;
    transition: transform 0.3s ease, background-color 0.3s ease, box-shadow 0.3s ease; /* Thêm transition */
}

.skill-item:hover {
    transform: translateY(-5px);
}

.skill-item i {
    font-size: 2rem;
    color: var(--primary-color);
    margin-bottom: 1rem;
}

/* Services Section */
.services-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 2rem;
}

.service-card {
    background: var(--card-bg); /* Sử dụng biến */
    padding: 2rem;
    border-radius: 15px;
    box-shadow: var(--shadow); /* Sử dụng biến */
    text-align: center;
    transition: all 0.3s ease;
    border-top: 4px solid var(--primary-color);
}

.service-card:hover {
    transform: translateY(-10px);
    box-shadow: 0 20px 40px rgba(0,0,0,0.15);
}

.service-card i {
    font-size: 3rem;
    color: var(--primary-color);
    margin-bottom: 1rem;
}

.service-card h3 {
    font-size: 1.5rem;
    margin-bottom: 1rem;
    color: var(--text-color); /* Sử dụng biến */
}

/* Portfolio Section */
.portfolio {
    background: var(--section-bg); /* Sử dụng biến */
}

.portfolio-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
    gap: 2rem;
}

.portfolio-item {
    background: var(--card-bg); /* Sử dụng biến */
    border-radius: 15px;
    overflow: hidden;
    box-shadow: var(--shadow); /* Sử dụng biến */
    transition: transform 0.3s ease, background-color 0.3s ease, box-shadow 0.3s ease; /* Thêm transition */
}

.portfolio-item:hover {
    transform: translateY(-5px);
}

.portfolio-image {
    width: 100%;
    height: 200px;
    background: linear-gradient(45deg, var(--primary-color), var(--accent-color));
    display: flex;
    align-items: center;
    justify-content: center;
    color: var(--white);
    font-size: 3rem;
}

.portfolio-content {
    padding: 2rem;
}

.portfolio-content h3 {
    font-size: 1.3rem;
    margin-bottom: 1rem;
    color: var(--text-color); /* Sử dụng biến */
}

.portfolio-content p {
    color: var(--text-secondary-color); /* Sử dụng biến */
    margin-bottom: 1.5rem;
}

.portfolio-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
}

.tag {
    background: var(--section-bg); /* Sử dụng biến (nền section chẵn phù hợp cho tag) */
    padding: 0.3rem 0.8rem;
    border-radius: 20px;
    font-size: 0.9rem;
    color: var(--primary-color);
    transition: background-color 0.3s ease; /* Thêm transition */
}

/* Contact Section */
.contact-content {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 4rem;
}

.contact-info h3 {
    font-size: 1.5rem;
    margin-bottom: 2rem;
    color: var(--primary-color);
}

.contact-item {
    display: flex;
    align-items: center;
    gap: 1rem;
    margin-bottom: 1.5rem;
}

.contact-item i {
    width: 50px;
    height: 50px;
    background: var(--primary-color);
    color: var(--white);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.2rem;
}

.contact-form {
    display: flex;
    flex-direction: column;
    gap: 1rem;
}

.form-group {
    display: flex;
    flex-direction: column;
}

.form-group label {
    margin-bottom: 0.5rem;
    font-weight: 600;
    color: var(--text-color); /* Sử dụng biến */
}

.form-group input,
.form-group textarea {
    padding: 1rem;
    border: 2px solid var(--border-color);
    border-radius: 10px;
    font-size: 1rem;
    /* Loại bỏ 'width: 100%;' ở đây nếu bạn đã thêm nó */
    transition: border-color 0.3s ease, background-color 0.3s ease, color 0.3s ease;
}

/* Quy tắc riêng cho textarea, giữ nguyên để kiểm soát chiều cao */
.form-group textarea {
    min-height: 120px; /* Vẫn đảm bảo chiều cao tối thiểu */
    resize: vertical; /* Vẫn cho phép thay đổi kích thước theo chiều dọc */
}

/* Footer */
footer {
    background: var(--text-dark); /* Sử dụng biến, trong dark mode sẽ là màu chữ sáng */
    color: var(--text-color); /* Sử dụng biến, trong dark mode sẽ là màu chữ sáng */
    text-align: center;
    padding: 3rem 0;
    transition: background-color 0.3s ease, color 0.3s ease; /* Thêm transition */
}

.social-links {
    display: flex;
    justify-content: center;
    gap: 1rem;
    margin-bottom: 2rem;
}

.social-links a {
    width: 50px;
    height: 50px;
    background: var(--primary-color);
    color: var(--white);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    text-decoration: none;
    transition: transform 0.3s ease;
}

.social-links a:hover {
    transform: translateY(-3px);
}

/* Animations */
@keyframes fadeInUp {
    from {
        opacity: 0;
        transform: translateY(30px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes fadeInRight {
    from {
        opacity: 0;
        transform: translateX(30px);
    }
    to {
        opacity: 1;
        transform: translateX(0);
    }
}

/* Responsive Design */
@media (max-width: 768px) {
    .nav-links {
        display: none;
        position: fixed;
        top: 70px;
        left: 0;
        width: 100%;
        background: var(--header-bg); /* Sử dụng biến */
        flex-direction: column;
        padding: 2rem;
        box-shadow: var(--shadow);
        transition: background 0.3s ease;
    }

    .nav-links.active {
        display: flex;
    }

    /* Đảm bảo nav là flex container và căn chỉnh */
    nav {
        justify-content: space-between; /* Đẩy logo sang trái, các nút sang phải */
        align-items: center; /* Căn giữa theo chiều dọc */
        padding: 0 1.5rem; /* Điều chỉnh padding cho màn hình nhỏ */
    }

    /* Thay đổi thứ tự và hiển thị của Dark Mode Toggle */
    #dark-mode-toggle {
        display: block; /* Đảm bảo nút này hiển thị */
        order: 2; /* Đặt sau logo và nav-links */
        margin-left: auto; /* Đẩy nút này và các nút sau nó sang phải */
    }

    /* Thay đổi thứ tự và hiển thị của Menu Toggle */
    .menu-toggle {
        display: flex; /* Đảm bảo nút này hiển thị */
        order: 3; /* Đặt sau dark-mode-toggle */
        /* Không cần margin-left: auto nữa vì dark-mode-toggle đã đẩy sang phải */
        margin-left: 1rem; /* Tạo khoảng cách giữa dark mode và menu toggle */
    }

    /* Điều chỉnh kích thước font của tiêu đề để phù hợp hơn trên mobile */
    .hero {
            padding-top: 80px; /* Thêm padding-top để tránh bị header che mất */
            text-align: center; /* Căn giữa nội dung trong hero section */
            min-height: auto; /* Cho phép chiều cao tự động điều chỉnh */
        }

        .hero-content {
            grid-template-columns: 1fr; /* CHUYỂN THÀNH MỘT CỘT */
            gap: 2rem; /* Giảm khoảng cách giữa các phần tử */
            padding: 2rem 1.5rem; /* Điều chỉnh padding cho màn hình nhỏ */
        }

        .hero-text {
            padding: 0 1rem; /* Thêm padding cho khối text để nội dung không bị dính vào cạnh màn hình*/
        }

        .hero-text h1 {
            font-size: 2.2rem; /* Giảm kích thước font cho tiêu đề chính */
            margin-bottom: 0.5rem; /* Giảm khoảng cách dưới tiêu đề */
            line-height: 1.2; /* Tăng line-height nếu tên bị cắt dòng */
        }

        .hero-text .subtitle {
            font-size: 1.1rem; /* Giảm kích thước font cho phụ đề */
            margin-bottom: 1rem; /* Giảm khoảng cách dưới phụ đề */
        }

        .hero-text p {
            font-size: 0.95rem; /* Giảm kích thước font cho đoạn văn bản */
            margin-bottom: 1.5rem; /* Giảm khoảng cách dưới đoạn văn bản */
            max-width: 90%; /* Giới hạn độ rộng của đoạn văn bản để tránh tràn */
            margin-left: auto; /* Căn giữa đoạn văn bản khi có max-width */
            margin-right: auto; /* Căn giữa đoạn văn bản khi có max-width */
        }

        .cta-buttons {
            flex-direction: column; /* Đặt các nút CTA theo cột */
            gap: 0.8rem; /* Giảm khoảng cách giữa các nút */
            max-width: 250px; /* Giới hạn độ rộng của khối chứa các nút */
            margin: 0 auto; /* Căn giữa khối các nút */
        }
        
        .btn {
            width: 100%; /* Đảm bảo các nút chiếm đủ chiều rộng */
            padding: 0.8rem 1.5rem; /* Điều chỉnh padding cho nút */
        }

        .hero-image {
            order: -1; /* Đẩy hình ảnh lên trên văn bản trên mobile */
            margin-bottom: 1.5rem; /* Thêm khoảng cách dưới ảnh */
        }

        /* Thay đổi kích thước profile-image, bạn đang dùng class "profile-image" 2 lần */
        /* Nên dùng class "profile-image-container" cho div bao ngoài */
        .profile-image-container { /* Chọn class cho div bao ngoài ảnh */
            width: 180px; /* Giảm kích thước ảnh đại diện */
            height: 180px; /* Giảm kích thước ảnh đại diện */
            border: 3px solid rgba(255, 255, 255, 0.3); /* Giảm độ dày border */
            margin: 0 auto; /* Căn giữa container ảnh */
        }

    .about-content,
    .contact-content {
        grid-template-columns: 1fr;
        gap: 2rem;
    }

    .cta-buttons {
        flex-direction: column;
    }
}

/* Scroll animations */
.fade-in {
    opacity: 0;
    transform: translateY(30px);
    transition: all 0.6s ease;
}

.fade-in.visible {
    opacity: 1;
    transform: translateY(0);
}

/* Thêm CSS cho nút Dark Mode */
.btn-icon {
    background: none;
    border: none;
    font-size: 1.5rem;
    cursor: pointer;
    color: var(--text-color); /* Sử dụng biến màu chữ */
    margin-left: 1rem;
    transition: color 0.3s ease, transform 0.2s ease;
}

.btn-icon:hover {
    color: var(--primary-color);
    transform: scale(1.1);
}